
/* Base animation class */
.animated {
    opacity: 0;
    will-change: transform, opacity, filter;
}

/* Simple transform classes */
.fadeUp {
    transform: translateY(30px);
}

.zoomIn {
    transform: scale(0.92);
}

.slideInLeft {
    transform: translateX(-50px);
}

.slideInRight {
    transform: translateX(50px);
}

.slideInUp {
    transform: translateY(-50px);
}

.slideInDown {
    transform: translateY(50px);
}

.blurIn {
    filter: blur(8px);
}

.rise {
    transform: translateY(100px) scale(0.95);
}

.unfold {
    height: 0;
    transform: scale(0.9);
    overflow: hidden;
}

.glideLeft {
    transform: translateX(-75px) translateY(-25px) rotate(-4deg);
}

.glideRight {
    transform: translateX(75px) translateY(-25px) rotate(4deg);
}

.emerge {
    transform: translateY(50px) rotateX(10deg) scale(0.95);
    transform-style: preserve-3d;
    perspective: 1000px;
}

.assemble {
    transform: scale(0.9) translate(var(--random-x), var(--random-y)) rotate(var(--random-angle));
}

/* Visible state for simple animations */
.visible {
    opacity: 1;
    transform: translateY(0) translateX(0) scale(1) rotate(0) rotateX(0);
    filter: blur(0);
    height: auto;
}

/* KEYFRAME ANIMATIONS */

/* Fade Through */
@keyframes fadeThroughKeyframes {
    0% {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
        filter: saturate(0.8) contrast(0.8);
    }

    30% {
        opacity: 0.3;
        filter: saturate(0.9) contrast(0.9);
    }

    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
        filter: saturate(1) contrast(1);
    }
}

.fadeThrough.visible {
    animation-name: fadeThroughKeyframes;
    transform: none;
    opacity: 1;
}

/* Ripple In */
@keyframes rippleInKeyframes {
    0% {
        transform: scale(0.8);
        opacity: 0;
        box-shadow: 0 0 0 rgba(0, 0, 0, 0);
    }

    25% {
        opacity: 0.5;
        transform: scale(1.05);
    }

    50% {
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    75% {
        transform: scale(0.98);
    }

    100% {
        transform: scale(1);
        opacity: 1;
        box-shadow: 0 0 0 rgba(0, 0, 0, 0);
    }
}

.rippleIn.visible {
    animation-name: rippleInKeyframes;
    transform: none;
    opacity: 1;
}

/* Swing In */
@keyframes swingInKeyframes {
    0% {
        transform: rotateZ(-15deg) scale(0.9);
        opacity: 0;
        transform-origin: center;
    }

    30% {
        transform: rotateZ(10deg) scale(1.02);
        opacity: 0.5;
    }

    60% {
        transform: rotateZ(-6deg) scale(0.98);
        opacity: 0.8;
    }

    80% {
        transform: rotateZ(3deg) scale(1.01);
    }

    100% {
        transform: rotateZ(0) scale(1);
        opacity: 1;
    }
}

.swingIn.visible {
    animation-name: swingInKeyframes;
    transform: none;
    opacity: 1;
}

/* Spotlight In */
@keyframes spotlightInKeyframes {
    0% {
        opacity: 0;
        transform: scale(0.95);
        filter: brightness(2) blur(10px);
    }

    25% {
        filter: brightness(1.5) blur(5px);
        opacity: 0.3;
    }

    50% {
        transform: scale(1.02);
    }

    75% {
        filter: brightness(1.1) blur(0);
        opacity: 0.8;
    }

    100% {
        transform: scale(1);
        filter: brightness(1) blur(0);
        opacity: 1;
    }
}

.spotlightIn.visible {
    animation-name: spotlightInKeyframes;
    transform: none;
    opacity: 1;
    filter: none;
}

/* Bounce In */
@keyframes bounceInKeyframes {
    0% {
        transform: translateY(120px);
        opacity: 0;
        animation-timing-function: cubic-bezier(0.6, 0.04, 0.98, 0.335);
    }

    40% {
        transform: translateY(-20px);
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    60% {
        transform: translateY(10px);
        opacity: 1;
        animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    80% {
        transform: translateY(-5px);
    }

    100% {
        transform: translateY(0);
    }
}

.bounceIn.visible {
    animation-name: bounceInKeyframes;
    transform: none;
    opacity: 1;
}

/* Flip In */
@keyframes flipInKeyframes {
    0% {
        transform: perspective(1000px) rotateX(90deg);
        opacity: 0;
    }

    30% {
        transform: perspective(1000px) rotateX(-10deg);
        opacity: 0.7;
    }

    60% {
        transform: perspective(1000px) rotateX(5deg);
        opacity: 1;
    }

    100% {
        transform: perspective(1000px) rotateX(0deg);
    }
}

.flipIn.visible {
    animation-name: flipInKeyframes;
    transform: none;
    opacity: 1;
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

/* Fold Unfold */
@keyframes foldUnfoldKeyframes {
    0% {
        transform: perspective(1000px) rotateY(-90deg) scale(0.9);
        transform-origin: left center;
        opacity: 0;
    }

    30% {
        transform: perspective(1000px) rotateY(-10deg) scale(0.95);
        opacity: 0.7;
    }

    60% {
        transform: perspective(1000px) rotateY(5deg) scale(1.01);
        opacity: 1;
    }

    100% {
        transform: perspective(1000px) rotateY(0deg) scale(1);
    }
}

.foldUnfold.visible {
    animation-name: foldUnfoldKeyframes;
    transform: none;
    opacity: 1;
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

/* Split Pieces */
@keyframes splitPiecesKeyframes {
    0% {
        clip-path: inset(0 50% 0 50%);
        transform: scale(0.5);
        opacity: 0;
    }

    40% {
        clip-path: inset(0 15% 0 15%);
        transform: scale(0.9);
        opacity: 0.6;
    }

    70% {
        clip-path: inset(0 5% 0 5%);
        transform: scale(1.05);
        opacity: 0.8;
    }

    100% {
        clip-path: inset(0 0 0 0);
        transform: scale(1);
        opacity: 1;
    }
}

.splitPieces.visible {
    animation-name: splitPiecesKeyframes;
    transform: none;
    opacity: 1;
}

/* Glitch In */
@keyframes glitchInKeyframes {
    0% {
        transform: translate(0);
        opacity: 0;
        text-shadow: -2px 0 red, 2px 0 blue;
        clip-path: inset(50% 0 50% 0);
    }

    10% {
        transform: translate(-5px, 0);
        text-shadow: -3px 0 red, 3px 0 blue;
        clip-path: inset(20% 0 80% 0);
    }

    20% {
        transform: translate(5px, 0);
        text-shadow: 3px 0 red, -3px 0 blue;
        clip-path: inset(80% 0 20% 0);
    }

    30% {
        transform: translate(0, 5px);
        text-shadow: -1px 0 red, 1px 0 blue;
        clip-path: inset(0 0 0 0);
        opacity: 0.5;
    }

    40% {
        transform: translate(-3px, -5px);
        text-shadow: 1px 0 red, -1px 0 blue;
        clip-path: inset(20% 0 20% 0);
        opacity: 0.8;
    }

    50% {
        transform: translate(3px, 5px);
        text-shadow: -1px 0 red, 1px 0 blue;
        clip-path: inset(10% 0 10% 0);
    }

    60%,
    100% {
        transform: translate(0);
        text-shadow: none;
        clip-path: inset(0 0 0 0);
        opacity: 1;
    }
}

.glitchIn.visible {
    animation-name: glitchInKeyframes;
    transform: none;
    opacity: 1;
}

/* Type Writer */
@keyframes typewriterKeyframes {
    0% {
        width: 0;
        border-right: 2px solid;
    }

    80% {
        width: 100%;
        border-right: 2px solid;
    }

    100% {
        width: 100%;
        border-right: 0;
    }
}

.typewriter {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    opacity: 1;
    width: 0;
}

.typewriter.visible {
    animation-name: typewriterKeyframes;
    width: 100%;
    opacity: 1;
}

/* Animation durations */
.duration-300 {
    animation-duration: 300ms;
    transition-duration: 300ms;
}

.duration-500 {
    animation-duration: 500ms;
    transition-duration: 500ms;
}

.duration-600 {
    animation-duration: 600ms;
    transition-duration: 600ms;
}

.duration-700 {
    animation-duration: 700ms;
    transition-duration: 700ms;
}

.duration-1000 {
    animation-duration: 1000ms;
    transition-duration: 1000ms;
}

.duration-1500 {
    animation-duration: 1500ms;
    transition-duration: 1500ms;
}

.duration-2000 {
    animation-duration: 2000ms;
    transition-duration: 2000ms;
}

/* Animation delays */
.delay-0 {
    animation-delay: 0ms;
    transition-delay: 0ms;
}

.delay-100 {
    animation-delay: 100ms;
    transition-delay: 100ms;
}

.delay-200 {
    animation-delay: 200ms;
    transition-delay: 200ms;
}

.delay-300 {
    animation-delay: 300ms;
    transition-delay: 300ms;
}

.delay-500 {
    animation-delay: 500ms;
    transition-delay: 500ms;
}

.delay-700 {
    animation-delay: 700ms;
    transition-delay: 700ms;
}

.delay-1000 {
    animation-delay: 1000ms;
    transition-delay: 1000ms;
}

/* Cinematic transition easing */
.eased {
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Spring-like transition easing */
.spring {
    transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
    animation-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Staggered child animations */
.cascade>*:nth-child(1) {
    animation-delay: calc(var(--stagger-delay) * 0);
    transition-delay: calc(var(--stagger-delay) * 0);
}

.cascade>*:nth-child(2) {
    animation-delay: calc(var(--stagger-delay) * 1);
    transition-delay: calc(var(--stagger-delay) * 1);
}

.cascade>*:nth-child(3) {
    animation-delay: calc(var(--stagger-delay) * 2);
    transition-delay: calc(var(--stagger-delay) * 2);
}

.cascade>*:nth-child(4) {
    animation-delay: calc(var(--stagger-delay) * 3);
    transition-delay: calc(var(--stagger-delay) * 3);
}

.cascade>*:nth-child(5) {
    animation-delay: calc(var(--stagger-delay) * 4);
    transition-delay: calc(var(--stagger-delay) * 4);
}

.cascade>*:nth-child(6) {
    animation-delay: calc(var(--stagger-delay) * 5);
    transition-delay: calc(var(--stagger-delay) * 5);
}

.cascade>*:nth-child(7) {
    animation-delay: calc(var(--stagger-delay) * 6);
    transition-delay: calc(var(--stagger-delay) * 6);
}

.cascade>*:nth-child(8) {
    animation-delay: calc(var(--stagger-delay) * 7);
    transition-delay: calc(var(--stagger-delay) * 7);
}

.cascade>*:nth-child(9) {
    animation-delay: calc(var(--stagger-delay) * 8);
    transition-delay: calc(var(--stagger-delay) * 8);
}

.cascade>*:nth-child(10) {
    animation-delay: calc(var(--stagger-delay) * 9);
    transition-delay: calc(var(--stagger-delay) * 9);
}

/* Animation fill mode to maintain final state */
.animated.visible {
    animation-fill-mode: forwards;
}